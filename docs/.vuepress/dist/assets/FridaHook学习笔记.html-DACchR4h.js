import{_ as n,o as s,c as a,e as t}from"./app-koVjN3rn.js";const p={},o=t(`<h1 id="fridahook" tabindex="-1"><a class="header-anchor" href="#fridahook"><span>FridaHook</span></a></h1><h2 id="fridahook环境搭建" tabindex="-1"><a class="header-anchor" href="#fridahook环境搭建"><span>FridaHook环境搭建</span></a></h2><p>准备环境：Python、Nodejs</p><p>frida安装指定版本</p><p>pip install frida==14.2.18</p><p>pip install frida-tools==9.2.5</p><p>frida代码提示的配置：npm i @types/frida-gum</p><p>frida-gadget(脱离电脑 免root)</p><p>frida-inject(脱离电脑)</p><p>frida-server(连接电脑)</p><p>1、下载frida-server到安卓手机</p><p>adb push E:\\frida-server-14.2.18-android-arm64 /data/local/tmp/fsarm64</p><p>2、修改fsarm64权限</p><p>chmod 777 fsarm64</p><p>3、运行fsarm64</p><p>./fsarm64</p><p>4、注入jsHook测试</p><p>frida -UF -l test2.js</p><h2 id="fridahook普通方法和重载方法" tabindex="-1"><a class="header-anchor" href="#fridahook普通方法和重载方法"><span>FridaHook普通方法和重载方法</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> jsonRequest <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;com.dodonew.online.http.JsonRequest&quot;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;jsonRequest:&quot;</span><span class="token punctuation">,</span>jsonRequest<span class="token punctuation">)</span>
    jsonRequest<span class="token punctuation">.</span>paraMap<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;params1:&quot;</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">paraMap</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    jsonRequest<span class="token punctuation">.</span>addRequestMap<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;java.util.Map&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;addRequestMap params:&quot;</span><span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;addRequestMap params:&quot;</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;addRequestMap params:&quot;</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;userPwd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addRequestMap</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关键代码hook" tabindex="-1"><a class="header-anchor" href="#关键代码hook"><span>关键代码Hook</span></a></h2><h3 id="打印堆栈" tabindex="-1"><a class="header-anchor" href="#打印堆栈"><span>打印堆栈</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
        Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;android.util.Log&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">getStackTraceString</span><span class="token punctuation">(</span>
                Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Throwable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hashmap" tabindex="-1"><a class="header-anchor" href="#hashmap"><span>HashMap</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> hashMap <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.util.HashMap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hashMap<span class="token punctuation">.</span>put<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hashMap.put: &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//console.log(&quot;hashMap.put: &quot;, a, b);</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="arraylist" tabindex="-1"><a class="header-anchor" href="#arraylist"><span>ArrayList</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> arrayList <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.util.ArrayList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arrayList<span class="token punctuation">.</span>add<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;java.lang.Object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;username=15968079477&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;arrayList.add.overload(&#39;java.lang.Object&#39;): &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
arrayList<span class="token punctuation">.</span>add<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;java.lang.Object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;arrayList.add.overload(&#39;int&#39;, &#39;java.lang.Object&#39;): &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="textutils-isempty" tabindex="-1"><a class="header-anchor" href="#textutils-isempty"><span>TextUtils.isEmpty</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> textUtils <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;android.text.TextUtils&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
textUtils<span class="token punctuation">.</span>isEmpty<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token string">&quot;2v+DC2gq7RuAC8PE5GZz5wH3/y9ZVcWhFwhDY9L19g9iEd075+Q7xwewvfIN0g0ec/NaaF43/S0=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;textUtils.isEmpty: &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//console.log(&quot;textUtils.isEmpty: &quot;, a);</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="log" tabindex="-1"><a class="header-anchor" href="#log"><span>Log</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> log <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;android.util.Log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span>w<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;java.lang.String&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;java.lang.String&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;log.w: &quot;</span><span class="token punctuation">,</span> tag<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collections-sort" tabindex="-1"><a class="header-anchor" href="#collections-sort"><span>Collections.sort</span></a></h3><div class="language-jajavascriptvascript line-numbers-mode" data-ext="jajavascriptvascript" data-title="jajavascriptvascript"><pre class="language-jajavascriptvascript"><code>var collections = Java.use(&quot;java.util.Collections&quot;);
collections.sort.overload(&#39;java.util.List&#39;).implementation = function (a) {
    try{
        showStacks();
        var result = Java.cast(a, Java.use(&quot;java.util.ArrayList&quot;));
        console.log(&quot;collections.sort List: &quot;, result.toString());
    }catch (e) {

    }
    return this.sort(a);
}
collections.sort.overload(&#39;java.util.List&#39;, &#39;java.util.Comparator&#39;).implementation = function (a, b) {
    try{
        showStacks();
        var result = Java.cast(a, Java.use(&quot;java.util.ArrayList&quot;));
        console.log(&quot;collections.sort List Comparator: &quot;, result.toString());
    }catch (e) {

    }
    return this.sort(a, b);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jsonobject-put-jsonobject-getstring" tabindex="-1"><a class="header-anchor" href="#jsonobject-put-jsonobject-getstring"><span>JSONObject.put()/JSONObject.getString()</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> jSONObject <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;org.json.JSONObject&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jSONObject<span class="token punctuation">.</span>put<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;java.lang.String&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;java.lang.Object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Encrypt&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;jSONObject.put: &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
jSONObject<span class="token punctuation">.</span>getString<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;jSONObject.getString: &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;jSONObject.getString result: &quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="toast-show" tabindex="-1"><a class="header-anchor" href="#toast-show"><span>Toast.show()</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> toast <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;android.widget.Toast&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
toast<span class="token punctuation">.</span>show<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;toast.show: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="base64-encodetostring" tabindex="-1"><a class="header-anchor" href="#base64-encodetostring"><span>Base64.encodeToString()</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> base64 <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;android.util.Base64&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
base64<span class="token punctuation">.</span>encodeToString<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;[B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;int&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;base64.encodeToString: &quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;base64.encodeToString result: &quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="string-getbytes" tabindex="-1"><a class="header-anchor" href="#string-getbytes"><span>String.getBytes()</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> str <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.String&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
str<span class="token punctuation">.</span>getBytes<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> newStr <span class="token operator">=</span> str<span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;str.getBytes result: &quot;</span><span class="token punctuation">,</span> newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
str<span class="token punctuation">.</span>getBytes<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;java.lang.String&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> newStr <span class="token operator">=</span> str<span class="token punctuation">.</span>$<span class="token keyword">new</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;str.getBytes result: &quot;</span><span class="token punctuation">,</span> newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stringfactory-newstringfromstring-stringfactory-newstringfromchars" tabindex="-1"><a class="header-anchor" href="#stringfactory-newstringfromstring-stringfactory-newstringfromchars"><span>StringFactory.newStringFromString()/StringFactory.newStringFromChars()</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> stringFactory <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.StringFactory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stringFactory<span class="token punctuation">.</span>newStringFromString<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> retval <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">newStringFromString</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;stringFactory.newStringFromString: &quot;</span><span class="token punctuation">,</span> retval<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> retval<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
stringFactory<span class="token punctuation">.</span>newStringFromChars<span class="token punctuation">.</span><span class="token function">overload</span><span class="token punctuation">(</span><span class="token string">&#39;[C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> retval <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">newStringFromChars</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;stringFactory.newStringFromChars: &quot;</span><span class="token punctuation">,</span> retval<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> retval<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stringbuilder-tostring" tabindex="-1"><a class="header-anchor" href="#stringbuilder-tostring"><span>StringBuilder.toString()</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> sb <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.StringBuilder&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sb<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> retval <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>retval<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Encrypt&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;StringBuilder.toString: &quot;</span><span class="token punctuation">,</span> retval<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> retval<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> sb <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.StringBuffer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sb<span class="token punctuation">.</span>toString<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> retval <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>retval<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;StringBuffer.toString: &quot;</span><span class="token punctuation">,</span> retval<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> retval<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="appcompatactivity-enumerateloadedclassessync" tabindex="-1"><a class="header-anchor" href="#appcompatactivity-enumerateloadedclassessync"><span>AppCompatActivity.enumerateLoadedClassesSync()</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> appCompatActivity <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;androidx.appcompat.app.AppCompatActivity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>appCompatActivity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> classArr <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">enumerateLoadedClassesSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> classArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>classArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="r-id-findviewbyid" tabindex="-1"><a class="header-anchor" href="#r-id-findviewbyid"><span>R.id.findViewById()</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> btn_login_id <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;com.dodonew.online.R$id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>btn_login<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;btn_login_id&quot;</span><span class="token punctuation">,</span> btn_login_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> appCompatActivity <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;android.support.v7.app.AppCompatActivity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
appCompatActivity<span class="token punctuation">.</span>findViewById<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">==</span> btn_login_id<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;appCompatActivity.findViewById: &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;appCompatActivity.findViewById: &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setonclicklistener" tabindex="-1"><a class="header-anchor" href="#setonclicklistener"><span>setOnClickListener</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> btn_login_id <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;com.dodonew.online.R$id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>btn_login<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;btn_login_id&quot;</span><span class="token punctuation">,</span> btn_login_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> view <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;android.view.View&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
view<span class="token punctuation">.</span>setOnClickListener<span class="token punctuation">.</span><span class="token function-variable function">implementation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> btn_login_id<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">showStacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;view.id: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;view.setOnClickListener is called&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="frida启动注入" tabindex="-1"><a class="header-anchor" href="#frida启动注入"><span><strong>Frida启动注入</strong></span></a></h2><p>frida -U -f com.dodonew.online -l test2.js -o log.txt --no-pause</p><h2 id="开启全局调试权限" tabindex="-1"><a class="header-anchor" href="#开启全局调试权限"><span>开启全局调试权限</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>Administrator<span class="token operator">&gt;</span>adb shell
sailfish:/ $ <span class="token function">su</span>
sailfish:/ <span class="token comment"># ls</span>
acct       config        dsp             init.usb.configfs.rc odm         product_services system
apex       d             etc             init.usb.rc          oem         res              ueventd.rc
bin        data          firmware        init.zygote32.rc     persist     sbin             vendor
bugreports debug_ramdisk init            init.zygote64_32.rc  postinstall sdcard           verity_key
cache      default.prop  init.environ.rc lost+found           proc        storage
charger    dev           init.rc         mnt                  product     sys
sailfish:/ <span class="token comment"># cat default.prop</span>
<span class="token assign-left variable">ro.debuggable</span><span class="token operator">=</span><span class="token number">0</span> <span class="token comment">#0就是没有调试权限</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>使用mprop工具(重启失效)</strong>（亲测不行）</p><p>下载mprop：https://github.com/wpvsyou/mprop</p><p>查看手机cpu架构：adb shell getprop ro.product.cpu.abi</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>adb push mprop /data/local/tmp



adb shell

<span class="token function">su</span>

<span class="token builtin class-name">cd</span> /data/local/tmp

<span class="token function">chmod</span> <span class="token number">755</span> mprop



./mprop ro.debuggable <span class="token number">1</span>

getprop ro.debuggable

adb kill-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>安装MagiskHide Props Config模块（永久有效）</strong>(我测试了不行啊)</p><p><strong>Magisk重置ro.debuggable（重启失效）</strong>(亲测可行，但还是调试失败)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>adb shell <span class="token comment">#adb进入命令行模式</span>
<span class="token function">su</span> <span class="token comment">#切换至超级用户</span>
magisk resetprop ro.debuggable <span class="token number">1</span>
stop<span class="token punctuation">;</span>start<span class="token punctuation">;</span> <span class="token comment">#一定要通过该方式重启</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,62),e=[o];function c(i,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","FridaHook学习笔记.html.vue"]]),k=JSON.parse('{"path":"/view/note/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91/FridaHook%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html","title":"FridaHook","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"FridaHook环境搭建","slug":"fridahook环境搭建","link":"#fridahook环境搭建","children":[]},{"level":2,"title":"FridaHook普通方法和重载方法","slug":"fridahook普通方法和重载方法","link":"#fridahook普通方法和重载方法","children":[]},{"level":2,"title":"关键代码Hook","slug":"关键代码hook","link":"#关键代码hook","children":[{"level":3,"title":"打印堆栈","slug":"打印堆栈","link":"#打印堆栈","children":[]},{"level":3,"title":"HashMap","slug":"hashmap","link":"#hashmap","children":[]},{"level":3,"title":"ArrayList","slug":"arraylist","link":"#arraylist","children":[]},{"level":3,"title":"TextUtils.isEmpty","slug":"textutils-isempty","link":"#textutils-isempty","children":[]},{"level":3,"title":"Log","slug":"log","link":"#log","children":[]},{"level":3,"title":"Collections.sort","slug":"collections-sort","link":"#collections-sort","children":[]},{"level":3,"title":"JSONObject.put()/JSONObject.getString()","slug":"jsonobject-put-jsonobject-getstring","link":"#jsonobject-put-jsonobject-getstring","children":[]},{"level":3,"title":"Toast.show()","slug":"toast-show","link":"#toast-show","children":[]},{"level":3,"title":"Base64.encodeToString()","slug":"base64-encodetostring","link":"#base64-encodetostring","children":[]},{"level":3,"title":"String.getBytes()","slug":"string-getbytes","link":"#string-getbytes","children":[]},{"level":3,"title":"StringFactory.newStringFromString()/StringFactory.newStringFromChars()","slug":"stringfactory-newstringfromstring-stringfactory-newstringfromchars","link":"#stringfactory-newstringfromstring-stringfactory-newstringfromchars","children":[]},{"level":3,"title":"StringBuilder.toString()","slug":"stringbuilder-tostring","link":"#stringbuilder-tostring","children":[]},{"level":3,"title":"AppCompatActivity.enumerateLoadedClassesSync()","slug":"appcompatactivity-enumerateloadedclassessync","link":"#appcompatactivity-enumerateloadedclassessync","children":[]},{"level":3,"title":"R.id.findViewById()","slug":"r-id-findviewbyid","link":"#r-id-findviewbyid","children":[]},{"level":3,"title":"setOnClickListener","slug":"setonclicklistener","link":"#setonclicklistener","children":[]}]},{"level":2,"title":"Frida启动注入","slug":"frida启动注入","link":"#frida启动注入","children":[]},{"level":2,"title":"开启全局调试权限","slug":"开启全局调试权限","link":"#开启全局调试权限","children":[]}],"git":{"updatedTime":1709311174000,"contributors":[{"name":"wqby","email":"9479421@qq.com","commits":1}]},"filePathRelative":"view/note/安卓逆向/FridaHook学习笔记.md","excerpt":"\\n<h2>FridaHook环境搭建</h2>\\n<p>准备环境：Python、Nodejs</p>\\n<p>frida安装指定版本</p>\\n<p>pip install frida==14.2.18</p>\\n<p>pip install frida-tools==9.2.5</p>\\n<p>frida代码提示的配置：npm i @types/frida-gum</p>\\n<p>frida-gadget(脱离电脑 免root)</p>\\n<p>frida-inject(脱离电脑)</p>\\n<p>frida-server(连接电脑)</p>\\n<p>1、下载frida-server到安卓手机</p>\\n<p>adb push E:\\\\frida-server-14.2.18-android-arm64 /data/local/tmp/fsarm64</p>"}');export{r as comp,k as data};
