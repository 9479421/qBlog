import{_ as n,o as a,c as e,e as s}from"./app-DZvKpr8y.js";const i={},p=s(`<h1 id="微信小程序逆向教程" tabindex="-1"><a class="header-anchor" href="#微信小程序逆向教程"><span>微信小程序逆向教程</span></a></h1><p>这里简单谈谈我对小程序逆向不同于网页逆向和APP逆向的理解。</p><p>小程序本质上就是H5网页，微信本身就是个改版的浏览器，微信内嵌了一些官方API供小程序调用，所以抓包方法几乎一样。</p><p>但是微信自身做了一些VPN检测，所以常用的Httpcanary方法，能用是能用，但是不太好用。</p><p>这里我个人常用的2种方法</p><p>1.使用SockDroid+Charles</p><p>2.使用电脑版的微信打开小程序，然后用Fiddler抓包（推荐）</p><h2 id="抓包" tabindex="-1"><a class="header-anchor" href="#抓包"><span>抓包</span></a></h2><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230825110159024.png" alt="image-20230825110159024"></p><p>如图，我随便抓一个登录包，很轻易的就可以抓到了。但是我们发现密码参数pwd是加密的，网页爬虫可以直接调试js代码来进行逆向分析，那小程序该怎么办呢？先说方法，要把小程序的代码解密并且导出。</p><h2 id="提取" tabindex="-1"><a class="header-anchor" href="#提取"><span>提取</span></a></h2><p>准备两款工具：</p><ul><li><p>解密工具</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>UnpackMiniApp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>逆向工具</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>wxappUnpacker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="解密" tabindex="-1"><a class="header-anchor" href="#解密"><span>解密</span></a></h3><p>首先用unpackMiniApp选取最新修改日期（也就是最近打开的）的小程序目录，然后直接提取解密包。</p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230825110900520.png" alt="image-20230825110900520"></p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230825110909018.png" alt="image-20230825110909018"></p><p>然后我们就得到了一个wxapkg的包。</p><h3 id="反编译" tabindex="-1"><a class="header-anchor" href="#反编译"><span>反编译</span></a></h3><p>找到 wxappUnpacker 目录 输入CMD（要自备Nodejs环境）</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> <span class="token function">install</span> esprima
<span class="token function">npm</span> <span class="token function">install</span> css-tree
<span class="token function">npm</span> <span class="token function">install</span> cssbeautify
<span class="token function">npm</span> <span class="token function">install</span> vm2
<span class="token function">npm</span> <span class="token function">install</span> uglify-es
<span class="token function">npm</span> <span class="token function">install</span> js-beautify
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>随后执行：</p><p>bingo.bat 包的路径</p><p>即可得到编译后的文件</p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230825111113148.png" alt="image-20230825111113148"></p><p>使用Webstorm打开这个项目，并寻找pwd关键加密点。</p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230825111207141.png" alt="image-20230825111207141"></p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230825111242051.png" alt="image-20230825111242051"></p><p>这里的加密还是很潦草的，只用了10秒就逆向出来了，pwd就是对（密码原文+cqfltykj20160220）进行md5加密。</p><p>小程序逆向就是如此，仅仅多了一个解密和反编译的环节。</p>`,30),t=[p];function l(c,d){return a(),e("div",null,t)}const m=n(i,[["render",l],["__file","微信小程序逆向教程.html.vue"]]),r=JSON.parse('{"path":"/blog/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%80%86%E5%90%91%E6%95%99%E7%A8%8B.html","title":"微信小程序逆向教程","lang":"en-US","frontmatter":{"title":"微信小程序逆向教程","date":"2023-09-04T00:00:00.000Z","category":["History"],"tag":["教程","逆向","web","小程序"]},"headers":[{"level":2,"title":"抓包","slug":"抓包","link":"#抓包","children":[]},{"level":2,"title":"提取","slug":"提取","link":"#提取","children":[{"level":3,"title":"解密","slug":"解密","link":"#解密","children":[]},{"level":3,"title":"反编译","slug":"反编译","link":"#反编译","children":[]}]}],"git":{"updatedTime":1709311174000,"contributors":[{"name":"wqby","email":"9479421@qq.com","commits":1}]},"filePathRelative":"blog/微信小程序逆向教程.md","excerpt":"\\n<p>这里简单谈谈我对小程序逆向不同于网页逆向和APP逆向的理解。</p>\\n<p>小程序本质上就是H5网页，微信本身就是个改版的浏览器，微信内嵌了一些官方API供小程序调用，所以抓包方法几乎一样。</p>\\n<p>但是微信自身做了一些VPN检测，所以常用的Httpcanary方法，能用是能用，但是不太好用。</p>\\n<p>这里我个人常用的2种方法</p>\\n<p>1.使用SockDroid+Charles</p>\\n<p>2.使用电脑版的微信打开小程序，然后用Fiddler抓包（推荐）</p>\\n<h2>抓包</h2>\\n<p><img src=\\"https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230825110159024.png\\" alt=\\"image-20230825110159024\\"></p>"}');export{m as comp,r as data};
