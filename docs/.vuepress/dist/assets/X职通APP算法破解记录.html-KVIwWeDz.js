import{_ as a,o as n,c as s,e as p}from"./app-CC-6zdNz.js";const e={},t=p(`<h1 id="x职通app算法破解记录" tabindex="-1"><a class="header-anchor" href="#x职通app算法破解记录"><span>X职通APP算法破解记录</span></a></h1><blockquote><p>前言：这个App是用Uniapp写的，逆向破解过程不同于原生App</p></blockquote><h2 id="思路分析" tabindex="-1"><a class="header-anchor" href="#思路分析"><span>思路分析</span></a></h2><h3 id="_1-查壳" tabindex="-1"><a class="header-anchor" href="#_1-查壳"><span>1.查壳</span></a></h3><p>首先拿到APP的第一件事就是先用PKID查壳，发现没有加固。</p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230721162751268.png" alt="image-20230721162751268"></p><h3 id="_2-抓包" tabindex="-1"><a class="header-anchor" href="#_2-抓包"><span>2.抓包</span></a></h3><p>可以用小黄鸟，如果有证书检测就加一步JustTrustMe。我测试过没有抓包检测，这里就用Charles+SocksDroid了。</p><p>开始抓包，点击登录，发现有滑块验证。</p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230721163702199.png" alt="image-20230721163702199"></p><p>登录后，提示密码错误，我们开始分析抓到的登录包。</p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230721163900844.png" alt="image-20230721163900844"></p><h4 id="获取滑块包" tabindex="-1"><a class="header-anchor" href="#获取滑块包"><span>获取滑块包</span></a></h4><p>request:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>url:http://gwsxapp.gzzjzhy.com//captcha/get
body:
<span class="token punctuation">{</span>
	<span class="token string">&quot;captchaType&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;blockPuzzle&quot;</span>,
	<span class="token string">&quot;clientUid&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;slider-5e4a9c36-954e-4770-9f4b-45300dfc2b9e&quot;</span>,
	<span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1689928582615</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>很容易看出，capchaType是验证类型，blockPuzzle是滑块。clientUid是客户端id，这里可以随机或者留空。ts是13位时间戳。</p><p>response:</p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230721164338970.png" alt="image-20230721164338970"></p><p>可以得出originalImageBase64是滑块背景图的Base64编码，jigsawImageBase64是缺口图的Base64编码。</p><h4 id="校验滑块包" tabindex="-1"><a class="header-anchor" href="#校验滑块包"><span>校验滑块包</span></a></h4><p>request:</p><p>url:http://gwsxapp.gzzjzhy.com//captcha/check</p><p>body:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;captchaType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;blockPuzzle&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;pointJson&quot;</span><span class="token operator">:</span> <span class="token string">&quot;HBPadYqwETBdLVdNqxJMBlcZ6kGLvQ1Mnfe5nTAdh/A=&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6572ad2c455b4b7496e76fe552ab36a5&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>得知token在上方获取滑块包请求中的返回值里，至于pointJson，我们可以猜测他是滑块x,y点的加密后的数据，先留意着，后面到代码层再着重分析。</p><p>还有一个关键的是secretKey，这是AES加密的密匙，后面就知道了。</p><p>response:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;repCode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;repMsg&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
	<span class="token property">&quot;repData&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		...省略
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应该是根据success来判断滑块是否验证成功。</p><h4 id="登录包" tabindex="-1"><a class="header-anchor" href="#登录包"><span>登录包</span></a></h4><p>request:</p><p>url:http://gwsxapp.gzzjzhy.com/api/user/login</p><p>body:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;phonenumber&quot;</span><span class="token operator">:</span> <span class="token string">&quot;13763546528&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2222222222&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;captchaVerification&quot;</span><span class="token operator">:</span> <span class="token string">&quot;OeLUA9NZf6sow4bI3tHN5/fw6IvVxkU3Z3YFIMYiUWzbGcr9ArErC6YQC2PL+H2p9d64+TXcc4srqRORpdeSd+P705D9ywqRjLmrZwBtIqk=&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>phonenumber是手机号，password是密码，captchaVerification肯定是滑块验证成功后的做了一些加密的参数。</p><h3 id="_3-初步分析" tabindex="-1"><a class="header-anchor" href="#_3-初步分析"><span>3.初步分析</span></a></h3><p>这里以安卓APP为例：</p><p>正常我们分析一个APP的算法，首先要对其apk安装包进行反编译（脱壳完成或无壳的前提下），然后使用Xposed或者Frida框架对算法加密关键点进行Hook拦截，参数分析，一般就搞定了。</p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230721165456933.png" alt="image-20230721165456933"></p><p>反编译后，发现在无任何混淆处理的情况下，居然只有几个毫无作用的类存在，根本找不到任何功能相关的代码，这究竟是为什么呢？</p><p>前面说过了，这个可不是Android Studio编写出来的APK，而是使用Uniapp生成的，从何得知呢？我们可以在资源文件里看到这样一堆以uniapp开头的文件，这便是Uniapp生成的APK固有的特征。</p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230721170242892.png" alt="image-20230721170242892"></p><p>Uniapp是什么呢，Uniapp是基于Vue编写跨平台H5、小程序、和APP的一个很强大的框架，他可以实现一处编写，处处运行。例如用Uniapp写一份微信小程序的代码，那就可以一键生成出来QQ小程序、支付宝小程序、字节小程序、安卓APP、苹果APP、H5网页端等等等等。有了Uniapp就不需要每一个平台都单独写一份代码了，是一个很强大的跨平台产物。</p><p>既然是跨平台，肯定是基于web的，目前互联网技术而言，只有web可以实现真正的无限制应用层跨平台。</p><p>以此APP为例，一定是使用了webview来显示了一个网页，java层只负责系统层功能通讯，核心的Http通讯功能大概率是写在网页里的，这就是为什么我们刚刚反编译APP的java层代码一无所获的原因。</p><p>所以他的加密算法一定是使用了js来实现的，我们及时调整方向，勿要在java层浪费时间。</p><h3 id="_4-进阶分析" tabindex="-1"><a class="header-anchor" href="#_4-进阶分析"><span>4.进阶分析</span></a></h3><p>对于Uniapp的逆向分析，这里推荐两篇文章，介绍了Uniapp的逆向方法，感兴趣的可以去深入了解一下。</p><p>https://bbs.kanxue.com/thread-268054.htm</p><p>https://blog.csdn.net/Y_morph/article/details/129448711</p><p>总而言之，有两种方法。</p><p>①webview调试</p><p>远程调试需要有Xposed框架的手机以及相应的webview模块</p><p>模块下载地址：https://github.com/feix760/WebViewDebugHook</p><p>模块的作用是Hook指定APP，强行开启webviewdebug，否则默认是只有Chrome浏览器APP可以与电脑端Chrome浏览器进行远程调试的。</p><p>这里我主要介绍第二种方法，第一种方法自行实践</p><p>②直接解包，手撸算法。</p><p>也可以称之为静态分析，因为js文件是写死在app资源文件里的，我们只需要对js进行编辑，就可以搜索到核心关键代码，从而实现逆向算法。</p><p>Uniapp的核心js代码主要在：assets/apps/__UNI__54B9D71/www/app-service.js里，我们导出js文件，并且使用WebStorm打开这个文件，因为js被压缩过，挤在一起一团糟，使用WebStorm可以对其进行代码格式化。</p><p>下面我就不详细解释了，直接上图定位代码。</p><h4 id="pointjson参数" tabindex="-1"><a class="header-anchor" href="#pointjson参数"><span>pointJson参数</span></a></h4><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230721181354831.png" alt="image-20230721181354831"></p><p>pointJson：AES加密，加密参数为 { x : x坐标 , y : 5 } x是滑块的X坐标，y=5是固定写死的值</p><h4 id="captchaverification参数" tabindex="-1"><a class="header-anchor" href="#captchaverification参数"><span>captchaVerification参数</span></a></h4><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230721181743531.png" alt=""></p><p>captchaVerification：AES加密，加密参数为 token + &quot;---&quot; + { x : x坐标 , y : 5 }</p><h4 id="aes加密密匙" tabindex="-1"><a class="header-anchor" href="#aes加密密匙"><span>AES加密密匙</span></a></h4><p>那么问题来了，都是AES加密，那密匙是什么呢？其实就在我们先前的获取滑块的/captcha/get包的response里，我们先前提到过的secretKey就是AES加密的密匙了。</p><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230721183142341.png" alt="image-20230721183142341"></p><h3 id="_5-代码编写" tabindex="-1"><a class="header-anchor" href="#_5-代码编写"><span>5.代码编写</span></a></h3><p>思路如下：</p><p>1.发起获取滑块请求得到滑块缺口图和背景图，使用机器学习识别出滑块缺口所在x坐标</p><p>可以调用一些收费的打码平台进行识别，也推荐使用知名识别库四弟 ddddocr进行识别。</p><p>附上四弟链接： https://github.com/sml2h3/ddddocr</p><p>2.对 { x : x坐标 , y : 5 } 进行AES加密得到pointJson，并发起校验滑块请求</p><p>3.对 token + &quot;---&quot; + { x : x坐标 , y : 5 } 进行AES加密得到captchaVerification，并发起登录请求</p><p>具体的代码涉及违法和版权问题，这里就不开源了，需要的可以私聊我QQ获取：9479421</p>`,77),i=[t];function o(c,l){return n(),s("div",null,i)}const d=a(e,[["render",o],["__file","X职通APP算法破解记录.html.vue"]]),u=JSON.parse('{"path":"/blog/X%E8%81%8C%E9%80%9AAPP%E7%AE%97%E6%B3%95%E7%A0%B4%E8%A7%A3%E8%AE%B0%E5%BD%95.html","title":"X职通APP算法破解记录","lang":"en-US","frontmatter":{"title":"X职通APP算法破解记录","date":"2023-07-21T00:00:00.000Z","category":["History"],"tag":["爬虫","安卓","逆向","抓包"]},"headers":[{"level":2,"title":"思路分析","slug":"思路分析","link":"#思路分析","children":[{"level":3,"title":"1.查壳","slug":"_1-查壳","link":"#_1-查壳","children":[]},{"level":3,"title":"2.抓包","slug":"_2-抓包","link":"#_2-抓包","children":[]},{"level":3,"title":"3.初步分析","slug":"_3-初步分析","link":"#_3-初步分析","children":[]},{"level":3,"title":"4.进阶分析","slug":"_4-进阶分析","link":"#_4-进阶分析","children":[]},{"level":3,"title":"5.代码编写","slug":"_5-代码编写","link":"#_5-代码编写","children":[]}]}],"git":{"updatedTime":1709311174000,"contributors":[{"name":"wqby","email":"9479421@qq.com","commits":1}]},"filePathRelative":"blog/X职通APP算法破解记录.md","excerpt":"\\n<blockquote>\\n<p>前言：这个App是用Uniapp写的，逆向破解过程不同于原生App</p>\\n</blockquote>\\n<h2>思路分析</h2>\\n<h3>1.查壳</h3>\\n<p>首先拿到APP的第一件事就是先用PKID查壳，发现没有加固。</p>\\n<p><img src=\\"https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/image-20230721162751268.png\\" alt=\\"image-20230721162751268\\"></p>\\n<h3>2.抓包</h3>\\n<p>可以用小黄鸟，如果有证书检测就加一步JustTrustMe。我测试过没有抓包检测，这里就用Charles+SocksDroid了。</p>"}');export{d as comp,u as data};
