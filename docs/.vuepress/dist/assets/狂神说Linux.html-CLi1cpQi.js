import{_ as i,r as l,o as t,c as d,a as n,b as s,d as r,e as a}from"./app-W42XCaNm.js";const c={},o=a(`<h1 id="狂神说linux" tabindex="-1"><a class="header-anchor" href="#狂神说linux"><span>狂神说Linux</span></a></h1><h2 id="_1、对linux目录的解释" tabindex="-1"><a class="header-anchor" href="#_1、对linux目录的解释"><span>1、对Linux目录的解释</span></a></h2><ul><li>/bin：bin是Binary的缩写，这个目录存放着最经常使用的命令。</li><li>/boot：这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。(不要动)</li><li>/dev：dev是Device(设备)的缩写，存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。</li><li>/etc：这个目录用来存放所有的系统管理所需要的配置文件和子目录。</li><li>/home：用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</li><li>/lib：这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件。(不要动)</li><li>/lost+found：这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。(存放突然关机的一些文件)</li><li>/media：Linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux会把识别的设备挂载到这个目录下。</li><li>/mnt：系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。(我们后面会把一些本地文件挂载在这个目录下)</li><li>/opt：这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</li><li>/proc：这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。(不用管)</li><li>/root：该目录为系统管理员，也称作超级权限者的用户主目录。</li><li>/sbin：s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</li><li>/srv：该目录存放一些服务启动之后需要提取的数据。</li><li>/sys：这是Linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统sysfs。</li><li>/tmp：这个目录是用来存放一些临时文件的。</li><li>/usr：这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。</li><li>/usr/bin：系统用户使用的应用程序。</li><li>/usr/sbin：超级用户使用的比较高级的管理程序和系统守护程序。</li><li>/usr/src：内核源代码默认的放置目录。</li><li>/var：这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</li><li>/run：是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。</li><li>/www：存放服务器网站的相关的资源，环境，网站的项目。</li></ul><h2 id="_2、linux常用的基本命令" tabindex="-1"><a class="header-anchor" href="#_2、linux常用的基本命令"><span>2、Linux常用的基本命令</span></a></h2><p><strong>sync # 将数据由内存同步到硬盘中（最好在关机前操作）</strong></p><p><strong>关机（系统的关机、重启以及登出）</strong></p><p>shutdown # 关机指令</p><p>shutdown -h 10 # 10分钟后关机</p><p>shutdown -h now # 立刻关机</p><p>shutdown -h 20:25 # 今晚20:25关机</p><p>shutdown -r now # 系统立马重启</p><p>shutdown -r +10 # 系统十分钟后重启</p><p>reboot # 重启 等同于shutdown -r now</p><p>halt # 关闭系统 等同于shutdown -h now 和 poweroff</p><p><strong>目录管理</strong></p><p>ls：列出目录 -a参数：all，查看全部的文件，包括隐藏文件 -l参数：列出所有的文件，包含文件的属性和权限，但不包括隐藏文件</p><p>cd：切换目录 cd 目录名（绝对路径都是以 / 开头，相对路径，对于当前目录寻找）</p><p>pwd：显示当前用户所在的目录</p><p>mkdir：创建一个目录 mkdir -p 创建多级目录</p><p>rmdir：仅能删除空的目录，如果下面存在文件，需要先删除文件；递归删除多个目录 -p</p><p>cp：复制文件或目录</p><p>rm：移出文件或目录 -f：忽略不存在的文件，不会出现警告，强制删除 -r：递归删除目录 -i：互动，删除时询问是否删除</p><p>rm -rf：删除所有系统的文件，删库跑路就是这样操作的</p><p>mv：移动文件或目录、重命名文件 -f：强制 -u：只替换更新过的文件</p><p><strong>Windows电脑查看IP地址信息：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ipconfig
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Linux系统查看网络配置：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>网络配置目录：cd etc/sysconfig/network-scripts	centOS7系统
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>修改主机名：hostname 想修改的名字
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>ln</code>：创建链接 <code>touch</code>：创建文件 <code>echo</code>：输入字符串</p><h2 id="_3、linux基本属性" tabindex="-1"><a class="header-anchor" href="#_3、linux基本属性"><span>3、Linux基本属性</span></a></h2><p><strong>在Linux中的第一个字符代表这个文件是目录、文件或链接文件等等</strong></p><ul><li>当为 [ <strong>d</strong> ] 则是目录</li><li>当为 [ <strong>-</strong> ] 则是文件</li><li>若是 [ <strong>l</strong> ] 则表示为链接文档(link file)</li><li>若是 [ <strong>b</strong> ] 则表示为装置文件里面的可供储存的接口设备(可随机存取装置)</li><li>若是 [ <strong>c</strong> ] 则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)</li></ul><p>接下来的字符中，以三个为一组，且均为 [ <strong>rwx</strong> ] 三个参数的组合，其中 [ <strong>r</strong> ] 代表可读(read)、[ <strong>w</strong> ] 代表可写(write)、[ <strong>x</strong> ] 代表可执行(execute)；要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号 [ <strong>-</strong> ] 而已。</p><p>每个文件的属性由左边第一部分的10个字符来确定（如下图） <img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/3a45cfab717e482bbac28df8c4488453.png" alt="在这里插入图片描述"><strong>修改文件属性</strong></p><p><strong>1、chgrp：更改文件属组</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chgrp</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> 属组名 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2、chown：更改文件属主，也可以同时更改文件属组</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chown</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> 属主名 文件名
<span class="token function">chown</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> 属主名: 属组名 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3、chmod：更改文件9个属性(必须掌握)</strong></p><p>遇到<strong>你没有权限操作此文件</strong>问题时，可以用chmod来解决</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> xyz 文件或目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Linux文件属性有两种设置方法，一种是数字（常用的是数字），一种是符号。</p><p>Linux文件的基本权限就有九个，分别是owner/group/others三种身份各有自己的read/write/execute权限。</p><p>刚刚上面提到的数据：文件的权限字符为︰『-rwxrwxrwx』，这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>r:4		w:2		x:1

可读可写可执行	rwx		<span class="token number">7</span>
可读可写不可执行	rw-		<span class="token number">6</span>

<span class="token function">chmod</span> <span class="token number">777</span>	文件赋予所有用户可读可写可执行
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、文件内容查看" tabindex="-1"><a class="header-anchor" href="#_4、文件内容查看"><span>4、文件内容查看</span></a></h2><p><strong>Linux系统中使用以下命令来查看文件的内容：</strong></p><ul><li>cat 由第一行开始显示文件内容，用来读文章或者读取配置文件</li><li>tac 从最后一行开始显示，可以看出 tac 是 cat 的倒写</li><li>nl 显示的时候，顺着输出行号</li><li>more 一页一页的显示文件内容（空格代表翻页，enter代表向下看一行，:f 是行号）</li><li>less 与 more 类似，但是比more更好的是，它可以往前翻页（空格代表翻页，上下键代表翻动页面；退出使用 q 命令；查找字符串：/要查找的字符，向上查询使用：?要查询的字符串，n 继续搜寻下一个，N 搜寻上一个）</li><li>head 只看头几行（通过 -n 参数来控制显示几行）</li><li>tail 只看尾部几行（通过 -n 参数来控制显示几行）</li></ul><h2 id="_5、vim编辑器" tabindex="-1"><a class="header-anchor" href="#_5、vim编辑器"><span>5、Vim编辑器</span></a></h2><p><strong>三种使用模式</strong></p><p>基本上vi/vim 共分为三种模式，分别是命令模式(Command mode)，输入模式(Insert mode)和底线命令模式(Lastline mode)。这三种模式的作用分别是：</p><p><strong>命令模式：</strong> 用户刚刚启动vi/vim，便进入了命令模式。 此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。 以下是常用的几个命令：</p><ul><li><strong>i</strong> 切换到输入模式，以输入字符</li><li><strong>x</strong> 删除当前光标所在处的字符</li><li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。如果是编辑模式，需要先退出编辑模式！<strong>ESC</strong></li></ul><p><strong>输入模式：</strong> 在命令模式下按下i就进入了输入模式，在输入模式中，可以使用以下按键：</p><ul><li><strong>字符按键以及SHIFT组合</strong>，输入字符</li><li><strong>ENTER</strong>，回车键，换行</li><li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li><li><strong>DELETE</strong>，删除键，删除光标后一个字符</li><li><strong>方向键</strong>，在文本中移动光标</li><li><strong>HOME/END</strong>，移动光标到行首/行尾</li><li><strong>Page Up/Page Down</strong>，上下翻页</li><li><strong>Insert</strong>，切换光标为输入/替换模式，光标将变成竖线/下划线</li><li><strong>ESC</strong>，退出输入模式，切换到命令模式</li></ul><p><strong>底线命令模式：</strong> 在命令模式下按下 <strong>:</strong> (英文冒号)就进入了底线命令模式。光标就移动到了最底下，就可以在这里输入一些底线命令了。常用的底线命令有：</p><ul><li><strong>q</strong> 退出程序</li><li><strong>w</strong> 保存文件</li></ul><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/b5130d0b605b4c648528a94d82869f3c.png" alt="在这里插入图片描述"><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/5bdd1780aa924dc0bef73f25b350e2bb.png" alt="在这里插入图片描述"><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/3bd84e90384847cb9865bab78774cf84.png" alt="在这里插入图片描述"><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/f648873b6ff3435e935b16cd8d558faa.png" alt="在这里插入图片描述"><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/b4d6ccf042734979b36d7bdc88db8c76.png" alt="在这里插入图片描述"><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/65d26e3feb554090a3658a8a111107ee.png" alt="在这里插入图片描述"></p><h2 id="_6、账号管理" tabindex="-1"><a class="header-anchor" href="#_6、账号管理"><span>6、账号管理</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">useradd</span>	添加用户
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>useradd -选项 用户名 -m：自动创建这个用户的主目录 -G：给用户分配组</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">userdel</span>	删除用户
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>userdel -r 用户名 删除用户的时候将他的目录页一并删掉</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">usermod</span>	修改用户
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改完毕之后查看配置文件即可！</p><p><strong>切换用户：</strong></p><ol><li>切换用户的命令为：su username【username是你的用户名哦】</li><li>从普通用户切换到root用户，还可以使用命令：sudo su</li><li>在终端输入exit或logout或使用快捷方式ctrl+d，可以退回到原来用户，其实ctrl+d也是执行的exit命令</li><li>在切换用户时，如果想在切换用户之后使用新用户的工作环境，可以在su和username之间加-，例如：【su - root】</li></ol><p><strong>$表示普通用户</strong><strong>#表示超级用户，也就是root用户</strong></p><p><strong>我们一般通过root创建用户的时候，需要配置密码！</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">passwd</span> 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>锁定用户：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">passwd</span> <span class="token parameter variable">-l</span> 用户名	锁定之后这个用户就不能登录了
<span class="token function">passwd</span> <span class="token parameter variable">-d</span> 用户名	将密码清空也不能登录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、用户组管理" tabindex="-1"><a class="header-anchor" href="#_7、用户组管理"><span>7、用户组管理</span></a></h2><p><strong>属主、属组</strong></p><p>用户组的管理涉及用户组的添加、删除和修改。<strong>组的增加，删除和修改实际上就是对/etc/group文件的更新</strong></p><p>创建一个用户组：groupadd；创建完用户组之后可以得到一个组的id，这个id是可以指定的，如果不指定就是自增1</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">groupadd</span> <span class="token parameter variable">-g</span> 指定id 用户组名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除用户组：groupdel</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">groupdel</span> 用户组名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改用户组的权限信息和名字：groupmod</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">groupmod</span> <span class="token parameter variable">-g</span> 想修改的id <span class="token parameter variable">-n</span> 想修改的组名 原来的组名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>etc/passwd文件是用户管理工作涉及的最重要的一个文件</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>用户名:口令<span class="token punctuation">(</span>登录密码，我们不可见<span class="token punctuation">)</span>:用户标识号:组标识号:注释性描述:主目录:登录Shell
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/39112b87d9c84997b346a0ee5ec4b512.png" alt="在这里插入图片描述"></p><h2 id="_8、磁盘管理" tabindex="-1"><a class="header-anchor" href="#_8、磁盘管理"><span>8、磁盘管理</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">df</span> <span class="token punctuation">(</span>列出文件系统整体的磁盘使用量<span class="token punctuation">)</span>
<span class="token function">du</span> <span class="token punctuation">(</span>检查磁盘空间使用量<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/aaae4682998342d9bd4e47d70adf7640.png" alt="在这里插入图片描述"><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/d8e87be2718b440096aec0e6ad557194.png" alt="在这里插入图片描述"></p><h2 id="_9、进程管理" tabindex="-1"><a class="header-anchor" href="#_9、进程管理"><span>9、进程管理</span></a></h2><p>1、在Linux中，每一个程序都是有自己的一个进程，每一个进程都有一个id号 2、每一个进程，都会有一个父进程 3、进程可以有两种存在方式：前台和后台运行 4、一般的话服务都是后台运行的，基本的程序都是前台运行的</p><p><strong>常用命令：</strong></p><p><strong>ps 查看当前系统中正在执行的各种进程的信息</strong></p><ul><li>-a 显示当前终端运行的所有进程信息</li><li>-u 以用户的信息显示进程</li><li>-x 显示后台运行进程的参数</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># ps -aux 查看所有的进程</span>
<span class="token function">ps</span> -aux<span class="token operator">|</span><span class="token function">grep</span> mysql

<span class="token comment"># | 在Linux这个叫做管道符</span>
<span class="token comment"># grep 查找文件中符合条件的字符串</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ps -ef：可以看到父进程的信息</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> mysql 看父进程我们一般可以通过目录树结构来查看

<span class="token comment"># 进程树：</span>
pstree <span class="token parameter variable">-pu</span>
	<span class="token parameter variable">-p</span> 显示父id
	<span class="token parameter variable">-u</span> 显示用户组
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>结束进程</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">kill</span> <span class="token parameter variable">-9</span> 进程的id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_10、环境安装" tabindex="-1"><a class="header-anchor" href="#_10、环境安装"><span>10、环境安装</span></a></h2><p>安装软件一般有三种方式：</p><ul><li>rpm（用JDK来演示）</li><li>解压缩（用tomcat来演示）</li><li>yum在线安装（用docker来演示）</li></ul><h3 id="_1-安装jdk" tabindex="-1"><a class="header-anchor" href="#_1-安装jdk"><span>1.安装JDK：</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>检测当前系统是否存在Java环境:	<span class="token function">java</span> <span class="token parameter variable">-version</span>

安装JDK:
<span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> rpm包

卸载JDK:
<span class="token function">rpm</span> -qa<span class="token operator">|</span><span class="token function">grep</span> jdk	<span class="token comment"># 检测JDK版本信息</span>
<span class="token function">rpm</span> <span class="token parameter variable">-e</span> <span class="token parameter variable">--nodeps</span> 下载的JDK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>安装JDK：</strong><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/30fc9c3fa0dd41818bd40c8d12e963e4.png" alt="在这里插入图片描述"><strong>卸载JDK</strong><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/e3eb0d36bc584c699936ea33b940f06d.png" alt="在这里插入图片描述"> 配置环境变量：<code>etc/profile</code> 在文件的最后增加Java配置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/java/jdk1.8.0_321-amd64
<span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span>.:<span class="token variable">$JAVA_HOME</span>/lib:<span class="token variable">$JAVA_HOME</span>/jre/lib
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token variable">$JAVA_HOME</span>/jre/bin:<span class="token environment constant">$PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让这个配置文件生效：<code>source /etc/profile</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 开启防火墙端口</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span>端口号/tcp <span class="token parameter variable">--permanent</span>

<span class="token comment"># 重启防火墙</span>
systemctl restart firewalld.service

<span class="token comment"># 查看所有开启的端口，如果是阿里云，需要配置安全组规则！</span>
firewall-cmd --list-ports
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-安装tomcat" tabindex="-1"><a class="header-anchor" href="#_2-安装tomcat"><span>2.安装Tomcat</span></a></h3><p>1、下载tomcat，官网下载即可 <code>apache-tomcat-9.0.58.tar.gz</code> 2、解压这个文件</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> apache-tomcat-9.0.58.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/38428661a6da4abd8a809cd5b1e86c96.png" alt="在这里插入图片描述"> 3、启动tomcat测试！</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 执行</span>
./startup.sh
<span class="token comment"># 停止</span>
./shutdown.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>开启tomcat： <img src="https://wqby-1304194722.cos.ap-nanjing.myqcloud.com/img/79c0e3d825824de7a60fcbf847f88d6f.png" alt="在这里插入图片描述"> 如果防火墙8080端口开了并且阿里云安全组也开放了这个时候就可以直接访问远程了！</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 查看firewall服务状态</span>
systemctl status firewalld

<span class="token comment"># 开启、重启、关闭、firewalld.service服务</span>
<span class="token comment"># 开启</span>
<span class="token function">service</span> firewalld start
<span class="token comment"># 重启</span>
<span class="token function">service</span> firewalld restart
<span class="token comment"># 关闭</span>
<span class="token function">service</span> firewalld stop

<span class="token comment"># 查看防火墙规则</span>
firewall-cmd --list-all <span class="token comment"># 查看全部信息</span>
firewall-cmd --list-ports <span class="token comment"># 只看端口信息</span>

<span class="token comment"># 开启端口</span>
开端口命令：firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token parameter variable">--permanent</span>
重启防火墙：systemctl restart firewalld.service

命令含义：
<span class="token parameter variable">--zone</span> <span class="token comment">#作用域</span>
--add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token comment">#添加端口，格式为：端口/通讯协议</span>
<span class="token parameter variable">--permanent</span> <span class="token comment">#永久生效，没有此参数重启后失效</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>域名解析后，如果端口是 80(http) 或者 443(https) 可以直接访问，如果是 8080 9000，就需要通过Apache或者Nginx做一下反向代理即可！</p><h3 id="_3-docker-yum安装" tabindex="-1"><a class="header-anchor" href="#_3-docker-yum安装"><span>3.Docker（yum安装）</span></a></h3><blockquote><p>基于 CentOS 7 安装</p></blockquote>`,118),p={href:"https://docs.docker.com/install/linux/docker-ce/centos/",target:"_blank",rel:"noopener noreferrer"},u=a(`<p>2、检测CentOS 7</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@xiaobo bin<span class="token punctuation">]</span><span class="token comment"># cat /etc/redhat-release</span>
CentOS Linux release <span class="token number">7.6</span>.1810 <span class="token punctuation">(</span>Core<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>3、安装准备环境</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> 包名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>yum安装gcc相关</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gcc
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gcc-c++
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>4、卸载旧版本</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
	docker-client <span class="token punctuation">\\</span>
	docker-client-latest <span class="token punctuation">\\</span>
	docker-common <span class="token punctuation">\\</span>
 	docker-latest <span class="token punctuation">\\</span>
	docker-latest-logrotate <span class="token punctuation">\\</span>
	docker-logrotate <span class="token punctuation">\\</span>
	docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5、安装需要的软件包</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>6、设置stable镜像仓库</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 推荐使用国内的</span>
yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>7、更新yum软件包索引</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum makecache fast
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>8、安装Docker CE</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> docker-ce docker-ce-cli containerd.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>9、启动docker</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl start <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>10、测试</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> version

<span class="token function">docker</span> run hello-world

<span class="token function">docker</span> images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function m(v,b){const e=l("ExternalLinkIcon");return t(),d("div",null,[o,n("p",null,[s("1、官网安装参考手册："),n("a",p,[s("https://docs.docker.com/install/linux/docker-ce/centos/"),r(e)])]),u])}const h=i(c,[["render",m],["__file","狂神说Linux.html.vue"]]),k=JSON.parse('{"path":"/view/note/Linux/%E7%8B%82%E7%A5%9E%E8%AF%B4Linux.html","title":"狂神说Linux","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1、对Linux目录的解释","slug":"_1、对linux目录的解释","link":"#_1、对linux目录的解释","children":[]},{"level":2,"title":"2、Linux常用的基本命令","slug":"_2、linux常用的基本命令","link":"#_2、linux常用的基本命令","children":[]},{"level":2,"title":"3、Linux基本属性","slug":"_3、linux基本属性","link":"#_3、linux基本属性","children":[]},{"level":2,"title":"4、文件内容查看","slug":"_4、文件内容查看","link":"#_4、文件内容查看","children":[]},{"level":2,"title":"5、Vim编辑器","slug":"_5、vim编辑器","link":"#_5、vim编辑器","children":[]},{"level":2,"title":"6、账号管理","slug":"_6、账号管理","link":"#_6、账号管理","children":[]},{"level":2,"title":"7、用户组管理","slug":"_7、用户组管理","link":"#_7、用户组管理","children":[]},{"level":2,"title":"8、磁盘管理","slug":"_8、磁盘管理","link":"#_8、磁盘管理","children":[]},{"level":2,"title":"9、进程管理","slug":"_9、进程管理","link":"#_9、进程管理","children":[]},{"level":2,"title":"10、环境安装","slug":"_10、环境安装","link":"#_10、环境安装","children":[{"level":3,"title":"1.安装JDK：","slug":"_1-安装jdk","link":"#_1-安装jdk","children":[]},{"level":3,"title":"2.安装Tomcat","slug":"_2-安装tomcat","link":"#_2-安装tomcat","children":[]},{"level":3,"title":"3.Docker（yum安装）","slug":"_3-docker-yum安装","link":"#_3-docker-yum安装","children":[]}]}],"git":{},"filePathRelative":"view/note/Linux/狂神说Linux.md","excerpt":"\\n<h2>1、对Linux目录的解释</h2>\\n<ul>\\n<li>/bin：bin是Binary的缩写，这个目录存放着最经常使用的命令。</li>\\n<li>/boot：这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。(不要动)</li>\\n<li>/dev：dev是Device(设备)的缩写，存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。</li>\\n<li>/etc：这个目录用来存放所有的系统管理所需要的配置文件和子目录。</li>\\n<li>/home：用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</li>\\n<li>/lib：这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件。(不要动)</li>\\n<li>/lost+found：这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。(存放突然关机的一些文件)</li>\\n<li>/media：Linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux会把识别的设备挂载到这个目录下。</li>\\n<li>/mnt：系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。(我们后面会把一些本地文件挂载在这个目录下)</li>\\n<li>/opt：这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</li>\\n<li>/proc：这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。(不用管)</li>\\n<li>/root：该目录为系统管理员，也称作超级权限者的用户主目录。</li>\\n<li>/sbin：s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</li>\\n<li>/srv：该目录存放一些服务启动之后需要提取的数据。</li>\\n<li>/sys：这是Linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统sysfs。</li>\\n<li>/tmp：这个目录是用来存放一些临时文件的。</li>\\n<li>/usr：这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。</li>\\n<li>/usr/bin：系统用户使用的应用程序。</li>\\n<li>/usr/sbin：超级用户使用的比较高级的管理程序和系统守护程序。</li>\\n<li>/usr/src：内核源代码默认的放置目录。</li>\\n<li>/var：这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</li>\\n<li>/run：是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。</li>\\n<li>/www：存放服务器网站的相关的资源，环境，网站的项目。</li>\\n</ul>"}');export{h as comp,k as data};
